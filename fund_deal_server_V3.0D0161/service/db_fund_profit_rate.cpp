#include "db_fund_profit_rate.h"extern CftLog* gPtrAppLog;extern GlobalConfig* gPtrConfig; bool queryFundProfitRate(CMySQL* pMysql, FundProfitRate& data,  bool lock) //标题{    MYSQL_RES* pRes = NULL;    char szSql[MAX_SQL_LEN] = {0};    int iLen = 0, iRow = 0;    try    {        iLen = snprintf(szSql, sizeof(szSql),                    " SELECT "                    " Fimt_id,Fspid,Fdate,Ffund_code,Ffund_name, "                    " F1day_profit_rate,F7day_profit_rate,Fcreate_time,Fmodify_time, "                    " F1week_rise_rate,F1month_rise_rate,F3month_rise_rate,F6month_rise_rate, "                    " F1year_rise_rate,Fcumulative_net,F1month_annual_profit, "                    " F3month_annual_profit,F6month_annual_profit,F1year_track_error "                    " FROM fund_db.t_fund_profit_rate "                    " WHERE "                    " Fspid='%s'  AND "                     " Ffund_code='%s' AND "                     " Fdate = '%s' "                    " %s ",                    pMysql->EscapeStr(data.Fspid).c_str(),                    pMysql->EscapeStr(data.Ffund_code).c_str(),                    pMysql->EscapeStr(data.Fdate).c_str(),                    lock ? "FOR UPDATE" : ""                    );        gPtrAppLog->debug("[%s][%d]%s",__FILE__,__LINE__,szSql );        // 执行查询        pMysql->Query(szSql, iLen);        // 取结果集        pRes = pMysql->FetchResult();        // 获取结果行        iRow = mysql_num_rows(pRes);        if(iRow <0 || iRow > 1)        {            throw CException(ERR_DB_UNKNOW, "Unknown record set!", __FILE__, __LINE__);        }        for(int i=0; i<iRow; i++)         {            MYSQL_ROW row = mysql_fetch_row(pRes);            data.Fimt_id = row[0] ? atoll(row[0]) : 0;            strncpy(data.Fspid,row[1] ? row[1] : "", sizeof(data.Fspid) - 1);            strncpy(data.Fdate,row[2] ? row[2] : "", sizeof(data.Fdate) - 1);            strncpy(data.Ffund_code,row[3] ? row[3] : "", sizeof(data.Ffund_code) - 1);            strncpy(data.Ffund_name,row[4] ? row[4] : "", sizeof(data.Ffund_name) - 1);            data.F1day_profit_rate = row[5] ? atoll(row[5]) : 0;            data.F7day_profit_rate = row[6] ? atoll(row[6]) : 0;            strncpy(data.Fcreate_time,row[7] ? row[7] : "", sizeof(data.Fcreate_time) - 1);            strncpy(data.Fmodify_time,row[8] ? row[8] : "", sizeof(data.Fmodify_time) - 1);			data.F1week_rise_rate = row[9] ? atoll(row[9]) : 0;			data.F1month_rise_rate = row[10] ? atoll(row[10]) : 0;			data.F3month_rise_rate = row[11] ? atoll(row[11]) : 0;			data.F6month_rise_rate = row[12] ? atoll(row[12]) : 0;			data.F1year_rise_rate = row[13] ? atoll(row[13]) : 0;			data.Fcumulative_net = row[14] ? atoll(row[14]) : 0;			data.F1month_annual_profit = row[15] ? atoll(row[15]) : 0;			data.F3month_annual_profit = row[16] ? atoll(row[16]) : 0;			data.F6month_annual_profit = row[17] ? atoll(row[17]) : 0;			data.F1year_track_error = row[18] ? atoll(row[18]) : 0;			        }        mysql_free_result(pRes);    }    catch(CException& e)    {        if(pRes)    mysql_free_result(pRes);        throw;    }    catch( ... )    {        if(pRes)    mysql_free_result(pRes);        throw;    }    return iRow == 1;}/*** 查询最新一天的收益率*/bool queryFundLatestProfitRate(CMySQL* pMysql, FundProfitRate& data,  bool lock) //标题{    MYSQL_RES* pRes = NULL;    char szSql[MAX_SQL_LEN] = {0};    int iLen = 0, iRow = 0;    try    {        iLen = snprintf(szSql, sizeof(szSql),                    " SELECT "                    " Fimt_id,Fspid,Fdate,Ffund_code,Ffund_name, "                    " F1day_profit_rate,F7day_profit_rate,Fcreate_time,Fmodify_time, "                    " F1week_rise_rate,F1month_rise_rate,F3month_rise_rate, "                    " F6month_rise_rate,F1year_rise_rate,Fcumulative_net, F1month_annual_profit, "                    " F3month_annual_profit,F6month_annual_profit,F1year_track_error "                    " FROM fund_db.t_fund_profit_rate "                    " WHERE "                    " Fspid='%s'  AND "                     " Ffund_code='%s' "                     "order by Fdate desc limit 1"                    " %s ",                    pMysql->EscapeStr(data.Fspid).c_str(),                    pMysql->EscapeStr(data.Ffund_code).c_str(),                    lock ? "FOR UPDATE" : ""                    );        gPtrAppLog->debug("[%s][%d]%s",__FILE__,__LINE__,szSql );        // 执行查询        pMysql->Query(szSql, iLen);        // 取结果集        pRes = pMysql->FetchResult();        // 获取结果行        iRow = mysql_num_rows(pRes);        if(iRow <0 || iRow > 1)        {            throw CException(ERR_DB_UNKNOW, "Unknown record set!", __FILE__, __LINE__);        }        for(int i=0; i<iRow; i++)         {            MYSQL_ROW row = mysql_fetch_row(pRes);            data.Fimt_id = row[0] ? atoll(row[0]) : 0;            strncpy(data.Fspid,row[1] ? row[1] : "", sizeof(data.Fspid) - 1);            strncpy(data.Fdate,row[2] ? row[2] : "", sizeof(data.Fdate) - 1);            strncpy(data.Ffund_code,row[3] ? row[3] : "", sizeof(data.Ffund_code) - 1);            strncpy(data.Ffund_name,row[4] ? row[4] : "", sizeof(data.Ffund_name) - 1);            data.F1day_profit_rate = row[5] ? atoll(row[5]) : 0;            data.F7day_profit_rate = row[6] ? atoll(row[6]) : 0;            strncpy(data.Fcreate_time,row[7] ? row[7] : "", sizeof(data.Fcreate_time) - 1);            strncpy(data.Fmodify_time,row[8] ? row[8] : "", sizeof(data.Fmodify_time) - 1);			data.F1week_rise_rate = row[9] ? atoll(row[9]) : 0;			data.F1month_rise_rate = row[10] ? atoll(row[10]) : 0;			data.F3month_rise_rate = row[11] ? atoll(row[11]) : 0;			data.F6month_rise_rate = row[12] ? atoll(row[12]) : 0;			data.F1year_rise_rate = row[13] ? atoll(row[13]) : 0;			data.Fcumulative_net = row[14] ? atoll(row[14]) : 0;				data.F1month_annual_profit = row[15] ? atoll(row[15]) : 0;			data.F3month_annual_profit = row[16] ? atoll(row[16]) : 0;			data.F6month_annual_profit = row[17] ? atoll(row[17]) : 0;			data.F1year_track_error = row[18] ? atoll(row[18]) : 0;        }        mysql_free_result(pRes);    }    catch(CException& e)    {        if(pRes)    mysql_free_result(pRes);        throw;    }    catch( ... )    {        if(pRes)    mysql_free_result(pRes);        throw;    }    return iRow == 1;}/*** 查询收益率*/bool queryFundProfitRate(CMySQL* pMysql,int offset, int limit,FundProfitRate &where, vector<FundProfitRate>& datavec,  bool lock) //标题{    MYSQL_RES* pRes = NULL;    char szSql[MAX_SQL_LEN] = {0};    int iLen = 0, iRow = 0;    try    {        iLen = snprintf(szSql, sizeof(szSql),                    " SELECT "                    " Fimt_id,Fspid,Fdate,Ffund_code,Ffund_name, "                    " F1day_profit_rate,F7day_profit_rate,Fcreate_time,Fmodify_time, "                    " F1week_rise_rate,F1month_rise_rate,F3month_rise_rate, "                    " F6month_rise_rate,F1year_rise_rate,Fcumulative_net, F1month_annual_profit, "                    " F3month_annual_profit,F6month_annual_profit,F1year_track_error "                    " FROM fund_db.t_fund_profit_rate "                    " WHERE "                    " Fspid='%s'  AND "                     " Ffund_code='%s' "                     " order by Fdate desc  "                    " LIMIT %d, %d "                    " %s ",                    pMysql->EscapeStr(where.Fspid).c_str(),                    pMysql->EscapeStr(where.Ffund_code).c_str(),                    offset,limit,                    lock ? "FOR UPDATE" : ""                    );        gPtrAppLog->debug("[%s][%d]%s",__FILE__,__LINE__,szSql );        // 执行查询        pMysql->Query(szSql, iLen);        // 取结果集        pRes = pMysql->FetchResult();        // 获取结果行        iRow = mysql_num_rows(pRes);        if(iRow <0 )        {            throw CException(ERR_DB_UNKNOW, "Unknown record set!", __FILE__, __LINE__);        }        for(int i=0; i<iRow; i++)         {			FundProfitRate data;            memset(&data, 0, sizeof(data));			            MYSQL_ROW row = mysql_fetch_row(pRes);			            data.Fimt_id = row[0] ? atoll(row[0]) : 0;            strncpy(data.Fspid,row[1] ? row[1] : "", sizeof(data.Fspid) - 1);            strncpy(data.Fdate,row[2] ? row[2] : "", sizeof(data.Fdate) - 1);            strncpy(data.Ffund_code,row[3] ? row[3] : "", sizeof(data.Ffund_code) - 1);            strncpy(data.Ffund_name,row[4] ? row[4] : "", sizeof(data.Ffund_name) - 1);            data.F1day_profit_rate = row[5] ? atoll(row[5]) : 0;            data.F7day_profit_rate = row[6] ? atoll(row[6]) : 0;            strncpy(data.Fcreate_time,row[7] ? row[7] : "", sizeof(data.Fcreate_time) - 1);            strncpy(data.Fmodify_time,row[8] ? row[8] : "", sizeof(data.Fmodify_time) - 1);			data.F1week_rise_rate = row[9] ? atoll(row[9]) : 0;			data.F1month_rise_rate = row[10] ? atoll(row[10]) : 0;			data.F3month_rise_rate = row[11] ? atoll(row[11]) : 0;			data.F6month_rise_rate = row[12] ? atoll(row[12]) : 0;			data.F1year_rise_rate = row[13] ? atoll(row[13]) : 0;			data.Fcumulative_net = row[14] ? atoll(row[14]) : 0;				data.F1month_annual_profit = row[15] ? atoll(row[15]) : 0;			data.F3month_annual_profit = row[16] ? atoll(row[16]) : 0;			data.F6month_annual_profit = row[17] ? atoll(row[17]) : 0;			data.F1year_track_error = row[18] ? atoll(row[18]) : 0;			datavec.push_back(data);        }        mysql_free_result(pRes);    }    catch(CException& e)    {        if(pRes)    mysql_free_result(pRes);        throw;    }    catch( ... )    {        if(pRes)    mysql_free_result(pRes);        throw;    }    return iRow >= 1;}bool queryHighestProfitRateSp(CMySQL* pMysql, FundProfitRate& data,  bool lock) //标题{    MYSQL_RES* pRes = NULL;    char szSql[MAX_SQL_LEN] = {0};    int iLen = 0, iRow = 0;    try    {        iLen = snprintf(szSql, sizeof(szSql),                    " SELECT "                    " Fimt_id,Fspid,Fdate,Ffund_code,Ffund_name, "                    " F1day_profit_rate,F7day_profit_rate,Fcreate_time,Fmodify_time "                    " FROM fund_db.t_fund_profit_rate "                    " WHERE "                    " Fdate>='%s' "                     " order by F7day_profit_rate desc limit 1"                    " %s ",                    pMysql->EscapeStr(data.Fdate).c_str(),                    lock ? "FOR UPDATE" : ""                    );        gPtrAppLog->debug("[%s][%d]%s",__FILE__,__LINE__,szSql );        // 执行查询        pMysql->Query(szSql, iLen);        // 取结果集        pRes = pMysql->FetchResult();        // 获取结果行        iRow = mysql_num_rows(pRes);        if(iRow <0 || iRow > 1)        {            throw CException(ERR_DB_UNKNOW, "Unknown record set!", __FILE__, __LINE__);        }        for(int i=0; i<iRow; i++)         {            MYSQL_ROW row = mysql_fetch_row(pRes);            data.Fimt_id = row[0] ? atoll(row[0]) : 0;            strncpy(data.Fspid,row[1] ? row[1] : "", sizeof(data.Fspid) - 1);            strncpy(data.Fdate,row[2] ? row[2] : "", sizeof(data.Fdate) - 1);            strncpy(data.Ffund_code,row[3] ? row[3] : "", sizeof(data.Ffund_code) - 1);            strncpy(data.Ffund_name,row[4] ? row[4] : "", sizeof(data.Ffund_name) - 1);            data.F1day_profit_rate = row[5] ? atoll(row[5]) : 0;            data.F7day_profit_rate = row[6] ? atoll(row[6]) : 0;            strncpy(data.Fcreate_time,row[7] ? row[7] : "", sizeof(data.Fcreate_time) - 1);            strncpy(data.Fmodify_time,row[8] ? row[8] : "", sizeof(data.Fmodify_time) - 1);        }        mysql_free_result(pRes);    }    catch(CException& e)    {        if(pRes)    mysql_free_result(pRes);        throw;    }    catch( ... )    {        if(pRes)    mysql_free_result(pRes);        throw;    }    return iRow == 1;}void insertFundProfitRate(CMySQL* pMysql, FundProfitRate &data ){    char szSql[MAX_SQL_LEN + 1]={0};    // 构造SQL    int iLen = snprintf(szSql, sizeof(szSql),                    " INSERT INTO fund_db.t_fund_profit_rate("                    " Fspid,Fdate,Ffund_code,F1day_profit_rate,F7day_profit_rate, "                    " F1week_rise_rate,F1month_rise_rate,F3month_rise_rate, "                    " F6month_rise_rate,F1year_rise_rate,Fcumulative_net, "                    " F1month_annual_profit,F3month_annual_profit,F6month_annual_profit,F1year_track_error, "                    " Fcreate_time,Fmodify_time)"                    " VALUES("                    " '%s','%s','%s',%zd,%zd, "                    " %zd,%zd,%zd,%zd,%zd,%zd, "                    " %zd,%zd,%zd,%zd, "                    " '%s','%s')",                    pMysql->EscapeStr(data.Fspid).c_str(),                    pMysql->EscapeStr(data.Fdate).c_str(),                    pMysql->EscapeStr(data.Ffund_code).c_str(),                    data.F1day_profit_rate,                    data.F7day_profit_rate,                    data.F1week_rise_rate,					data.F1month_rise_rate,					data.F3month_rise_rate,					data.F6month_rise_rate,					data.F1year_rise_rate,					data.Fcumulative_net,					data.F1month_annual_profit,					data.F3month_annual_profit,					data.F6month_annual_profit,					data.F1year_track_error,                    pMysql->EscapeStr(data.Fcreate_time).c_str(),                    pMysql->EscapeStr(data.Fmodify_time).c_str()                    );    gPtrAppLog->debug("[%s][%d]%s",__FILE__,__LINE__,szSql );    // 执行SQL    pMysql->Query(szSql, iLen);}  /**update函数*update影响行数为1时正确，为0或>1都会抛出异常*/ void updateFundProfitRate(CMySQL* pMysql, FundProfitRate& data){    stringstream tb_name;    stringstream ss_cond;    map<string, string> kv_map;        tb_name << "fund_db.t_fund_profit_rate" ;    // 设置需要更新的字段    kv_map["Fmodify_time"] = toString(data.Fmodify_time);	TRACE_DEBUG("updateFundProfitRate:[%s][%s][Fmodify_time:%s]",data.Fspid,data.Ffund_code, kv_map["Fmodify_time"].c_str());		if(data.F1week_rise_rate!=0) 	{                                               		kv_map["F1week_rise_rate"] = toString(data.F1week_rise_rate);   	}	if(data.F1month_rise_rate!=0) 	{                                               		kv_map["F1month_rise_rate"] = toString(data.F1month_rise_rate);   	}	if(data.F3month_rise_rate!=0) 	{                                               		kv_map["F3month_rise_rate"] = toString(data.F3month_rise_rate);   	}	if(data.F6month_rise_rate!=0) 	{                                               		kv_map["F6month_rise_rate"] = toString(data.F6month_rise_rate);   	}	if(data.F1year_rise_rate!=0) 	{                                               		kv_map["F1year_rise_rate"] = toString(data.F1year_rise_rate);   	}	if(data.Fcumulative_net!=0) 	{                                               		kv_map["Fcumulative_net"] = toString(data.Fcumulative_net);   	}	if(data.F1month_annual_profit!=0) 	{                                               		kv_map["F1month_annual_profit"] = toString(data.F1month_annual_profit);   	}	if(data.F3month_annual_profit!=0) 	{                                               		kv_map["F3month_annual_profit"] = toString(data.F3month_annual_profit);   	}	if(data.F6month_annual_profit!=0) 	{                                               		kv_map["F6month_annual_profit"] = toString(data.F6month_annual_profit);   	}		if(data.F1year_track_error!=0) 	{                                               		kv_map["F1year_track_error"] = toString(data.F1year_track_error);   	}	    ss_cond << "Fimt_id='" <<  toString(data.Fimt_id) <<"' ";    // 执行更新数据表操作    int affect_row = UpdateTable(pMysql, tb_name.str(), ss_cond, kv_map);    if (affect_row != 1)    {        throw EXCEPTION(ERR_DB_AFFECT_MULTIROWS, "update affect rows error");    }}bool setSpProfitRateToKV(CMySQL* pMysql, FundProfitRate &data){    string key = "profit_rate_" + toString(data.Fspid) + "_" + toString(data.Ffund_code);    string szValue;	if(!queryFundLatestProfitRate(pMysql, data, false))	{		return true;//没有，不返回错误了	}	CParams kvReqSet;    //设置要修改的数据szValue	kvReqSet.setParam("Fimt_id",data.Fimt_id);	kvReqSet.setParam("Fspid",data.Fspid);	kvReqSet.setParam("Ffund_code",data.Ffund_code);	kvReqSet.setParam("Fdate",data.Fdate);	kvReqSet.setParam("F1day_profit_rate",data.F1day_profit_rate);	kvReqSet.setParam("F7day_profit_rate",data.F7day_profit_rate);	kvReqSet.setParam("F1week_rise_rate",data.F1week_rise_rate);	kvReqSet.setParam("F1month_rise_rate",data.F1month_rise_rate);	kvReqSet.setParam("F3month_rise_rate",data.F3month_rise_rate);	kvReqSet.setParam("F6month_rise_rate",data.F6month_rise_rate);	kvReqSet.setParam("F1year_rise_rate",data.F1year_rise_rate);	kvReqSet.setParam("Fcumulative_net",data.Fcumulative_net);	kvReqSet.setParam("F1month_annual_profit",data.F1month_annual_profit);	kvReqSet.setParam("F3month_annual_profit",data.F3month_annual_profit);	kvReqSet.setParam("F6month_annual_profit",data.F6month_annual_profit);	kvReqSet.setParam("F1year_track_error",data.F1year_track_error);    szValue = kvReqSet.pack();    //将szValue写入ckv	if(gCkvSvrOperator->set(NOT_REUPDATE_CKV(CKV_KEY_PROFIT_RATE), key, szValue))	{		return false;	}	else	{		return true;	}		}/***设置cache*/bool setMultiSpProfitRateToKV(CMySQL* mysql, FundProfitRate& fundProfitRate){	string key = "multi_profit_record_" + toString(fundProfitRate.Fspid) + "_" + toString(fundProfitRate.Ffund_code);    vector<FundProfitRate> fundProfitRateVec;	if( !queryFundProfitRate(mysql, 0, 61, fundProfitRate, fundProfitRateVec, false))	{		TRACE_DEBUG("no fund profit record");		return true; //收益率没有就算了	}    string szValue;	CParams kvReqSet;	char szParaName[64] = {0};    //设置要修改的数据szValue    for(vector<FundProfitRate>::size_type i= 0; i != fundProfitRateVec.size(); ++i)    {		FundProfitRate tradeFund = fundProfitRateVec[i];					snprintf(szParaName, sizeof(szParaName), "Fimt_id_%zd", i);		kvReqSet.setParam(szParaName, tradeFund.Fimt_id);				snprintf(szParaName, sizeof(szParaName), "Fspid_%zd", i);		kvReqSet.setParam(szParaName, tradeFund.Fspid);		snprintf(szParaName, sizeof(szParaName), "Ffund_code_%zd", i);		kvReqSet.setParam(szParaName, tradeFund.Ffund_code);				snprintf(szParaName, sizeof(szParaName), "Fdate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.Fdate);				snprintf(szParaName, sizeof(szParaName), "F1day_profit_rate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F1day_profit_rate);				snprintf(szParaName, sizeof(szParaName), "F7day_profit_rate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F7day_profit_rate);		snprintf(szParaName, sizeof(szParaName), "F1week_rise_rate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F1week_rise_rate);        snprintf(szParaName, sizeof(szParaName), "F1month_rise_rate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F1month_rise_rate);				snprintf(szParaName, sizeof(szParaName), "F3month_rise_rate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F3month_rise_rate);		snprintf(szParaName, sizeof(szParaName), "F6month_rise_rate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F6month_rise_rate);		snprintf(szParaName, sizeof(szParaName), "F1year_rise_rate_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F1year_rise_rate);		snprintf(szParaName, sizeof(szParaName), "Fcumulative_net_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.Fcumulative_net);		snprintf(szParaName, sizeof(szParaName), "F1month_annual_profit_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F1month_annual_profit);				snprintf(szParaName, sizeof(szParaName), "F3month_annual_profit_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F3month_annual_profit);		snprintf(szParaName, sizeof(szParaName), "F6month_annual_profit_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F6month_annual_profit);		snprintf(szParaName, sizeof(szParaName), "F1year_track_error_%zd", i);		kvReqSet.setParam(szParaName,tradeFund.F1year_track_error);			    }	kvReqSet.setParam("total_num",(int)(fundProfitRateVec.size()));    szValue = kvReqSet.pack();    //将szValue写入ckv	if(gCkvSvrOperator->set(NOT_REUPDATE_CKV(CKV_KEY_MULTI_PROFIT_RECORD), key, szValue))	{		return false;	}	else	{		return true;	}}bool setHighestProfitRateSpToKV(CMySQL* pMysql, FundProfitRate &data){    string key = "highest_profit_rate_sp";    string szValue;	if(!queryHighestProfitRateSp(pMysql, data, false))	{		return true;//没有就不用更新	}	CParams kvReqSet;    //设置要修改的数据szValue	kvReqSet.setParam("Fimt_id",data.Fimt_id);	kvReqSet.setParam("Fspid",data.Fspid);	kvReqSet.setParam("Ffund_code",data.Ffund_code);	kvReqSet.setParam("Fdate",data.Fdate);	kvReqSet.setParam("F1day_profit_rate",data.F1day_profit_rate);	kvReqSet.setParam("F7day_profit_rate",data.F7day_profit_rate);    szValue = kvReqSet.pack();    //将szValue写入ckv	if(gCkvSvrOperator->set(NOT_REUPDATE_CKV(CKV_KEY_HIGHTEST_PROFIT_RATE_SP), key, szValue))	{		return false;	}	else	{		return true;	}		}bool getHighestProfitRateSpFromKV(FundProfitRate &data){    string key = "highest_profit_rate_sp";	//取kv数据	CParams kvRspGet;	gCkvSvrOperator->get(key, kvRspGet);	if( !kvRspGet.isExists("Fspid"))	{		return false;	}	strncpy(data.Fspid,kvRspGet.getString("Fspid").c_str(), sizeof(data.Fspid) - 1);	strncpy(data.Ffund_code,kvRspGet.getString("Ffund_code").c_str(), sizeof(data.Ffund_code) - 1);	strncpy(data.Fdate,kvRspGet.getString("Fdate").c_str(), sizeof(data.Fdate) - 1);	data.F1day_profit_rate = kvRspGet.getLong("F1day_profit_rate");	data.F7day_profit_rate = kvRspGet.getLong("F7day_profit_rate");	return true;		}bool setAllLastSpProfitRateToKV(CMySQL *mysql){	vector<FundSpConfig> fundSpConfigVec;    if ( !queryFundSpAllConfig(mysql, fundSpConfigVec, false))    {        TRACE_DEBUG("no fund sp config");        return true;    }    string key = "all_last_profit_record";    string szValue;    CParams kvReqSet;    char szParaName[64] = {0};	int iCount = 0;    //更新全部基金代码的收益率    for (vector<FundSpConfig>::size_type i= 0; i != fundSpConfigVec.size(); ++i)    {        FundSpConfig fundSpConfig = fundSpConfigVec[i];        if (fundSpConfig.Flstate != LSTATE_VALID)        {            continue;        }        FundProfitRate data;        memset(&data, 0,sizeof(FundProfitRate));        strncpy(data.Fspid,fundSpConfig.Fspid, sizeof(data.Fspid) - 1);        strncpy(data.Ffund_code,fundSpConfig.Ffund_code, sizeof(data.Ffund_code) - 1);	if(!queryFundLatestProfitRate(mysql, data, false))        {            continue;        }        snprintf(szParaName, sizeof(szParaName), "Fimt_id_%d", iCount);        kvReqSet.setParam(szParaName, data.Fimt_id);        snprintf(szParaName, sizeof(szParaName), "Fspid_%d", iCount);        kvReqSet.setParam(szParaName, data.Fspid);        snprintf(szParaName, sizeof(szParaName), "Ffund_code_%d", iCount);        kvReqSet.setParam(szParaName, data.Ffund_code);        snprintf(szParaName, sizeof(szParaName), "Fdate_%d", iCount);        kvReqSet.setParam(szParaName, data.Fdate);        snprintf(szParaName, sizeof(szParaName), "F1day_profit_rate_%d", iCount);        kvReqSet.setParam(szParaName, data.F1day_profit_rate);        snprintf(szParaName, sizeof(szParaName), "F7day_profit_rate_%d", iCount);        kvReqSet.setParam(szParaName, data.F7day_profit_rate);				snprintf(szParaName, sizeof(szParaName), "F1week_rise_rate_%d", iCount);		kvReqSet.setParam(szParaName,data.F1week_rise_rate);		snprintf(szParaName, sizeof(szParaName), "F1month_rise_rate_%d", iCount);		kvReqSet.setParam(szParaName,data.F1month_rise_rate);		snprintf(szParaName, sizeof(szParaName), "F3month_rise_rate_%d", iCount);		kvReqSet.setParam(szParaName,data.F3month_rise_rate);		snprintf(szParaName, sizeof(szParaName), "F6month_rise_rate_%d", iCount);		kvReqSet.setParam(szParaName,data.F6month_rise_rate);		snprintf(szParaName, sizeof(szParaName), "F1year_rise_rate_%d", iCount);		kvReqSet.setParam(szParaName,data.F1year_rise_rate);		snprintf(szParaName, sizeof(szParaName), "Fcumulative_net_%d", iCount);		kvReqSet.setParam(szParaName,data.Fcumulative_net);		snprintf(szParaName, sizeof(szParaName), "F1month_annual_profit_%d", iCount);		kvReqSet.setParam(szParaName,data.F1month_annual_profit);				snprintf(szParaName, sizeof(szParaName), "F3month_annual_profit_%d", iCount);		kvReqSet.setParam(szParaName,data.F3month_annual_profit);		snprintf(szParaName, sizeof(szParaName), "F6month_annual_profit_%d", iCount);		kvReqSet.setParam(szParaName,data.F6month_annual_profit);		snprintf(szParaName, sizeof(szParaName), "F1year_track_error_%d", iCount);		kvReqSet.setParam(szParaName,data.F1year_track_error);				iCount++;    }    kvReqSet.setParam("total_num", iCount);		if(0 == iCount)	{	return true;//出异常了就不写		}	    szValue = kvReqSet.pack();    //将szValue写入ckv    if (gCkvSvrOperator->set(CKV_KEY_ALL_ONE_DAY_PROFIT_RECORD, key, szValue))    {        return false;    }    else    {        return true;    }}/**  * 净值的10的4次方  */LONG getCacheETFNet(CMySQL* pMysql, const string& spid, const string& fund_code){	time_t tt = time(NULL);	ETFNetCache* etf_net_cache = &gPtrConfig->m_ETFNetCache[fund_code];	// 使用缓存净值	if(etf_net_cache->timeout>tt){		return etf_net_cache->fundNet;	}    // 取DB最新净值    FundProfitRate data;	memset(&data,0,sizeof(data));	strncpy(data.Fspid,spid.c_str(), sizeof(data.Fspid) - 1);	strncpy(data.Ffund_code,fund_code.c_str(), sizeof(data.Ffund_code) - 1);    queryFundLatestProfitRate(pMysql, data,false);		etf_net_cache->fundNet=data.F1day_profit_rate;	etf_net_cache->timeout=tt + 1800 * 1;// 本地缓存半小时;		return etf_net_cache->fundNet;}/**  * 净值的10的4次方  */LONG getCacheSpNet(CMySQL* pMysql, SpConfigCache& spConfig){	// 非指数基金的净值为1	if(spConfig.type!=SPCONFIG_TYPE_ETF)	{		return 10000;	}	return getCacheETFNet(pMysql,spConfig.spid,spConfig.fund_code);}